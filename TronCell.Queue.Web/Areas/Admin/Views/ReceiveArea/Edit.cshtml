@model TronCell.Queue.Web.Models.ReceiveArea

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>编辑收料区域</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ReceiveAreaId)
        @Html.HiddenFor(model => model.CreateTime)
        @*<div style="visibility:hidden">
                @Html.DropDownListFor(model => model.AreaState, new SelectList(Enum.GetValues(typeof(TronCell.Queue.Web.Models.AreaState))))
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.AreaName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AreaName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AreaName)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Wharfs, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Wharfs, new SelectList(Enum.GetValues(typeof(TronCell.Queue.Web.Models.Wharfs))))
                @Html.ValidationMessageFor(model => model.Category)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Category, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AreaState, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AreaState, new SelectList(Enum.GetValues(typeof(TronCell.Queue.Web.Models.AreaState))))
                @Html.ValidationMessageFor(model => model.AreaState)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="确认修改" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回列表", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
