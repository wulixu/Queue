@model TronCell.Queue.Web.Models.QueueCall

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>QueueCall</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.QueueNum, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QueueNum)
                @Html.ValidationMessageFor(model => model.QueueNum)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.State)
                @Html.ValidationMessageFor(model => model.State)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Priority, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Priority)
                @Html.ValidationMessageFor(model => model.Priority)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateTime)
                @Html.ValidationMessageFor(model => model.CreateTime)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartTime)
                @Html.ValidationMessageFor(model => model.StartTime)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndTime)
                @Html.ValidationMessageFor(model => model.EndTime)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QueueUserId, "QueueUserId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("QueueUserId", String.Empty)
                @Html.ValidationMessageFor(model => model.QueueUserId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OperationId, "OperationId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OperationId", String.Empty)
                @Html.ValidationMessageFor(model => model.OperationId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReceiveAreaId, "ReceiveAreaId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ReceiveAreaId", String.Empty)
                @Html.ValidationMessageFor(model => model.ReceiveAreaId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Deleted, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Deleted)
                @Html.ValidationMessageFor(model => model.Deleted)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
